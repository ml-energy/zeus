"""Create a baseline migrations

Revision ID: 28e705c127e7
Revises: 
Create Date: 2024-02-22 21:48:08.901510

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '28e705c127e7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Job',
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('default_batch_size', sa.Integer(), nullable=False),
    sa.Column('high_is_better_metric', sa.Boolean(), nullable=False),
    sa.Column('eta_knob', sa.Float(), nullable=False),
    sa.Column('beta_knob', sa.Float(), nullable=False),
    sa.Column('target_metric', sa.Float(), nullable=False),
    sa.Column('max_epochs', sa.Integer(), nullable=False),
    sa.Column('num_pruning_rounds', sa.Integer(), nullable=False),
    sa.Column('window_size', sa.Integer(), nullable=False),
    sa.Column('mab_prior_mean', sa.Float(), nullable=False),
    sa.Column('mab_prior_precision', sa.Float(), nullable=False),
    sa.Column('mab_seed', sa.Integer(), nullable=False),
    sa.Column('mab_num_exploration', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.create_table('Exploration',
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('batch_size', sa.Integer(), nullable=False),
    sa.Column('exploration_state', sa.Enum('Exploring', 'Converged', 'Unconverged', 'Unexplored', name='state'), nullable=False),
    sa.Column('direction', sa.Enum('Down', 'Up', name='direction'), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['Job.job_id'], ),
    sa.PrimaryKeyConstraint('job_id', 'batch_size')
    )
    op.create_table('GaussianTsArmState',
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('batch_size', sa.Integer(), nullable=False),
    sa.Column('arm_param_mean', sa.Float(), nullable=False),
    sa.Column('arm_param_prec', sa.Float(), nullable=False),
    sa.Column('reward_precision', sa.Float(), nullable=False),
    sa.Column('arm_num_observations', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['Job.job_id'], ),
    sa.PrimaryKeyConstraint('job_id', 'batch_size')
    )
    op.create_table('Measurement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('batch_size', sa.Integer(), nullable=False),
    sa.Column('time', sa.Float(), nullable=False),
    sa.Column('energy', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id', 'batch_size'], ['Exploration.job_id', 'Exploration.batch_size'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Measurement')
    op.drop_table('GaussianTsArmState')
    op.drop_table('Exploration')
    op.drop_table('Job')
    # ### end Alembic commands ###
